{"ast":null,"code":"import{configureStore}from'@reduxjs/toolkit';import reducers from'../reducers';import{useDispatch,useSelector}from'react-redux';export const store=configureStore({reducer:reducers,middleware:getDefaultMiddleware=>{return getDefaultMiddleware({serializableCheck:false});}});export const useAppDispatch=useDispatch;export const useAppSelector=useSelector;","map":{"version":3,"names":["configureStore","reducers","useDispatch","useSelector","store","reducer","middleware","getDefaultMiddleware","serializableCheck","useAppDispatch","useAppSelector"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport reducers from '../reducers'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nexport const store = configureStore({\n    reducer: reducers,\n    middleware: (getDefaultMiddleware) => {\n        return getDefaultMiddleware({\n            serializableCheck: false,\n        })\n    },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch: () => typeof store.dispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<ReturnType<typeof reducers>> =\n    useSelector\n"],"mappings":"AAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAClC,OAA+BC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAE5E,MAAO,MAAM,CAAAC,KAAK,CAAGJ,cAAc,CAAC,CAChCK,OAAO,CAAEJ,QAAQ,CACjBK,UAAU,CAAGC,oBAAoB,EAAK,CAClC,MAAO,CAAAA,oBAAoB,CAAC,CACxBC,iBAAiB,CAAE,KACvB,CAAC,CAAC,CACN,CACJ,CAAC,CAAC,CAGF,MAAO,MAAM,CAAAC,cAA2C,CAAGP,WAAW,CACtE,MAAO,MAAM,CAAAQ,cAAiE,CAC1EP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}