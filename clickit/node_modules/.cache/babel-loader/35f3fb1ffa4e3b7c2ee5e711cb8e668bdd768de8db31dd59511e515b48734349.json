{"ast":null,"code":"import { updateProfile, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '../config/firebase';\nimport { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, SET_USER_REQUEST, SET_USER_SUCCESS, SET_USER_FAILURE, CLEAR_USER_ERRORS } from '../actions/user';\nimport { authRequestWithDispatch } from '../actions/api';\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return authRequestWithDispatch({\n      dispatch,\n      endpoint: 'get_current_user',\n      types: [GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE]\n    });\n  };\n};\nexport const signUpApp = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: SET_USER_REQUEST\n    });\n    try {\n      const userPromise = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userPromise.user;\n      await updateProfile(userPromise.user, {\n        displayName: email\n      });\n      dispatch({\n        type: SET_USER_SUCCESS,\n        payload: user\n      });\n    } catch (err) {\n      dispatch({\n        type: SET_USER_FAILURE,\n        payload: {\n          message: err.message,\n          status: 500\n        }\n      });\n      return;\n    }\n    return authRequestWithDispatch({\n      dispatch,\n      endpoint: 'createUser',\n      method: 'POST',\n      types: [SET_USER_REQUEST, SET_USER_SUCCESS, SET_USER_FAILURE],\n      data: {\n        email,\n        onboarded: false\n      }\n    });\n  };\n};\nexport const signInApp = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n      dispatch({\n        type: GET_USER_FAILURE,\n        payload: {\n          message: err.message,\n          status: 500\n        }\n      });\n    }\n    return;\n  };\n};\nexport const signOutApp = () => {\n  return async dispatch => {\n    dispatch({\n      type: SET_USER_REQUEST,\n      payload: undefined\n    });\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const sendPassResetEmail = email => {};\nexport const updateEmail = email => {};\nexport const updatePassword = password => {};\nexport const resetUserErrors = () => {\n  return dispatch => {\n    dispatch({\n      type: CLEAR_USER_ERRORS\n    });\n  };\n};","map":{"version":3,"names":["updateProfile","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","auth","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILURE","CLEAR_USER_ERRORS","authRequestWithDispatch","getCurrentUser","dispatch","endpoint","types","signUpApp","email","password","type","userPromise","user","displayName","payload","err","message","status","method","data","onboarded","signInApp","signOutApp","undefined","error","console","sendPassResetEmail","updateEmail","updatePassword","resetUserErrors"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/authentication/firebase.ts"],"sourcesContent":["import {\n    updateProfile,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n} from 'firebase/auth'\nimport { auth } from '../config/firebase'\nimport { AppDispatch } from '../store'\nimport {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n\n    SET_USER_REQUEST,\n    SET_USER_SUCCESS,\n    SET_USER_FAILURE,\n    \n    CLEAR_USER_ERRORS,\n} from '../actions/user'\nimport { authRequestWithDispatch } from '../actions/api'\n\nexport const getCurrentUser = () => {\n    return (dispatch: AppDispatch) => {\n        return authRequestWithDispatch({\n            dispatch,\n            endpoint: 'get_current_user',\n            types: [GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE],\n        })\n    }\n}\n\nexport const signUpApp = (\n    email: string,\n    password: string,\n) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({ \n            type: SET_USER_REQUEST \n        })\n        try {\n            const userPromise = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password,\n            )\n\n            const user = userPromise.user\n\n            await updateProfile(\n                userPromise.user, \n                { displayName: email }\n            )\n\n\n            dispatch ({\n                type: SET_USER_SUCCESS,\n                payload: user,\n            })\n        } catch (err: any) {\n            dispatch({\n                type: SET_USER_FAILURE,\n                payload: {\n                    message: err.message,\n                    status: 500,\n                },\n            })\n            return\n        }\n\n        return authRequestWithDispatch({\n            dispatch,\n            endpoint: 'createUser',\n            method: 'POST',\n            types: [SET_USER_REQUEST, SET_USER_SUCCESS, SET_USER_FAILURE],\n            data: {\n                email,\n                onboarded: false,\n            },\n        })\n    }\n}\n\nexport const signInApp = (email: string, password: string) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({ type: GET_USER_REQUEST })\n        try {\n            await signInWithEmailAndPassword(auth, email, password)\n        } catch (err: any) {\n            dispatch({\n                type: GET_USER_FAILURE,\n                payload: {\n                    message: err.message,\n                    status: 500,\n                },\n            })\n        }\n        return\n    }\n}\n\nexport const signOutApp = () => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: SET_USER_REQUEST,\n            payload: undefined,\n        })\n        try {\n            await signOut(auth)\n        } catch (error: any) {\n            console.error(error)\n        }\n    }\n}\n\nexport const sendPassResetEmail = (email: string) => {}\n\nexport const updateEmail = (email: string) => {}\n\nexport const updatePassword = (password: string) => {}\n\nexport const resetUserErrors = () => {\n    return (dispatch: AppDispatch) => {\n        dispatch({ type: CLEAR_USER_ERRORS })\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}