{"ast":null,"code":"import { updateProfile, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { auth } from '../config/firebase';\nimport { GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE, SET_USER_REQUEST, SET_USER_FAILURE, CLEAR_USER_ERRORS } from '../actions/user';\nexport const getCurrentUser = () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n  };\n};\nexport const signUpApp = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: SET_USER_REQUEST\n    });\n    try {\n      const newUser = await createUserWithEmailAndPassword(auth, email, password);\n      await updateProfile(newUser.user, {\n        displayName: email\n      });\n    } catch (error) {\n      console.error(error);\n      dispatch({\n        type: SET_USER_FAILURE,\n        payload: {\n          message: error.message,\n          status: 500\n        }\n      });\n    }\n    return;\n  };\n};\nexport const signInApp = (email, password) => {\n  return async dispatch => {\n    dispatch({\n      type: GET_USER_REQUEST\n    });\n    try {\n      const user = await signInWithEmailAndPassword(auth, email, password);\n      dispatch({\n        type: GET_USER_SUCCESS,\n        payload: user.user\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_USER_FAILURE,\n        payload: {\n          message: error.message,\n          status: 500\n        }\n      });\n    }\n  };\n};\nexport const signOutApp = () => {\n  return async dispatch => {\n    dispatch({\n      type: SET_USER_REQUEST,\n      payload: undefined\n    });\n    try {\n      await signOut(auth);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const sendPassResetEmail = email => {};\nexport const updateEmail = email => {};\nexport const updatePassword = password => {};\nexport const resetUserErrors = () => {\n  return dispatch => {\n    dispatch({\n      type: CLEAR_USER_ERRORS\n    });\n  };\n};","map":{"version":3,"names":["updateProfile","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","auth","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","SET_USER_REQUEST","SET_USER_FAILURE","CLEAR_USER_ERRORS","getCurrentUser","dispatch","type","signUpApp","email","password","newUser","user","displayName","error","console","payload","message","status","signInApp","log","signOutApp","undefined","sendPassResetEmail","updateEmail","updatePassword","resetUserErrors"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/authentication/firebase.ts"],"sourcesContent":["import {\n    updateProfile,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n} from 'firebase/auth'\nimport { auth } from '../config/firebase'\nimport { AppDispatch } from '../store'\nimport {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n\n    SET_USER_REQUEST,\n    SET_USER_SUCCESS,\n    SET_USER_FAILURE,\n\n    CLEAR_USER_ERRORS,\n} from '../actions/user'\n\nexport const getCurrentUser = () => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: GET_USER_REQUEST,\n        })\n    }\n}\n\nexport const signUpApp = (email: string, password: string) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: SET_USER_REQUEST,\n        })\n        try {\n            const newUser = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password,\n            )\n            await updateProfile(newUser.user, {\n                displayName: email,\n            })\n            \n        } catch (error: any) {\n            console.error(error)\n            dispatch({\n                type: SET_USER_FAILURE,\n                payload: {\n                    message: error.message,\n                    status: 500,\n                },\n            })\n        }\n        return\n    }\n}\n\nexport const signInApp = (email: string, password: string) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: GET_USER_REQUEST,\n        })\n        try {\n            const user = await signInWithEmailAndPassword(auth, email, password)\n            dispatch({\n                type: GET_USER_SUCCESS,\n                payload: user.user,\n            })\n        } catch (error: any) {\n            console.log(error)\n            dispatch({\n                type: GET_USER_FAILURE,\n                payload: {\n                    message: error.message,\n                    status: 500,\n                },\n            })\n        }\n    }\n}\n\nexport const signOutApp = () => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: SET_USER_REQUEST,\n            payload: undefined,\n        })\n        try {\n            await signOut(auth)\n        } catch (error: any) {\n            console.error(error)\n        }\n    }\n}\n\nexport const sendPassResetEmail = (email: string) => {}\n\nexport const updateEmail = (email: string) => {}\n\nexport const updatePassword = (password: string) => {}\n\nexport const resetUserErrors = () => {\n    return (dispatch: AppDispatch) => {\n        dispatch({ type: CLEAR_USER_ERRORS })\n    }\n}\n"],"mappings":"AAAA,SACIA,aAAa,EACbC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,OAAO,QAEJ,eAAe;AACtB,SAASC,IAAI,QAAQ,oBAAoB;AAEzC,SACIC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAEhBC,gBAAgB,EAEhBC,gBAAgB,EAEhBC,iBAAiB,QACd,iBAAiB;AAExB,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,OAAO,MAAOC,QAAqB,IAAK;IACpCA,QAAQ,CAAC;MACLC,IAAI,EAAER;IACV,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMS,SAAS,GAAGA,CAACC,KAAa,EAAEC,QAAgB,KAAK;EAC1D,OAAO,MAAOJ,QAAqB,IAAK;IACpCA,QAAQ,CAAC;MACLC,IAAI,EAAEL;IACV,CAAC,CAAC;IACF,IAAI;MACA,MAAMS,OAAO,GAAG,MAAMf,8BAA8B,CAChDE,IAAI,EACJW,KAAK,EACLC,QACJ,CAAC;MACD,MAAMhB,aAAa,CAACiB,OAAO,CAACC,IAAI,EAAE;QAC9BC,WAAW,EAAEJ;MACjB,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOK,KAAU,EAAE;MACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBR,QAAQ,CAAC;QACLC,IAAI,EAAEJ,gBAAgB;QACtBa,OAAO,EAAE;UACLC,OAAO,EAAEH,KAAK,CAACG,OAAO;UACtBC,MAAM,EAAE;QACZ;MACJ,CAAC,CAAC;IACN;IACA;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGA,CAACV,KAAa,EAAEC,QAAgB,KAAK;EAC1D,OAAO,MAAOJ,QAAqB,IAAK;IACpCA,QAAQ,CAAC;MACLC,IAAI,EAAER;IACV,CAAC,CAAC;IACF,IAAI;MACA,MAAMa,IAAI,GAAG,MAAMjB,0BAA0B,CAACG,IAAI,EAAEW,KAAK,EAAEC,QAAQ,CAAC;MACpEJ,QAAQ,CAAC;QACLC,IAAI,EAAEP,gBAAgB;QACtBgB,OAAO,EAAEJ,IAAI,CAACA;MAClB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAU,EAAE;MACjBC,OAAO,CAACK,GAAG,CAACN,KAAK,CAAC;MAClBR,QAAQ,CAAC;QACLC,IAAI,EAAEN,gBAAgB;QACtBe,OAAO,EAAE;UACLC,OAAO,EAAEH,KAAK,CAACG,OAAO;UACtBC,MAAM,EAAE;QACZ;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAOf,QAAqB,IAAK;IACpCA,QAAQ,CAAC;MACLC,IAAI,EAAEL,gBAAgB;MACtBc,OAAO,EAAEM;IACb,CAAC,CAAC;IACF,IAAI;MACA,MAAMzB,OAAO,CAACC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOgB,KAAU,EAAE;MACjBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMS,kBAAkB,GAAId,KAAa,IAAK,CAAC,CAAC;AAEvD,OAAO,MAAMe,WAAW,GAAIf,KAAa,IAAK,CAAC,CAAC;AAEhD,OAAO,MAAMgB,cAAc,GAAIf,QAAgB,IAAK,CAAC,CAAC;AAEtD,OAAO,MAAMgB,eAAe,GAAGA,CAAA,KAAM;EACjC,OAAQpB,QAAqB,IAAK;IAC9BA,QAAQ,CAAC;MAAEC,IAAI,EAAEH;IAAkB,CAAC,CAAC;EACzC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}