{"ast":null,"code":"import{updateProfile,signInWithEmailAndPassword,createUserWithEmailAndPassword,signOut}from'firebase/auth';import{auth}from'../config/firebase';import{GET_USER_REQUEST,GET_USER_SUCCESS,GET_USER_FAILURE,SET_USER_REQUEST,SET_USER_SUCCESS,SET_USER_FAILURE,CLEAR_USER_ERRORS}from'../actions/user';import{authRequestWithDispatch}from'../actions/api';export const getCurrentUser=()=>{return dispatch=>{return authRequestWithDispatch({dispatch,endpoint:'get_current_user',types:[GET_USER_REQUEST,GET_USER_SUCCESS,GET_USER_FAILURE]});};};export const signUpApp=(email,password)=>{return async dispatch=>{dispatch({type:SET_USER_REQUEST});try{const userPromise=await createUserWithEmailAndPassword(auth,email,password);await updateProfile(userPromise.user,{displayName:email});}catch(err){dispatch({type:SET_USER_FAILURE,payload:{message:err.message,status:500}});return;}return authRequestWithDispatch({dispatch,endpoint:'createUser',method:'POST',types:[SET_USER_REQUEST,SET_USER_SUCCESS,SET_USER_FAILURE],data:{email,onboarded:false}});};};export const signInApp=(email,password)=>{return async dispatch=>{dispatch({type:GET_USER_REQUEST});try{await signInWithEmailAndPassword(auth,email,password);}catch(err){dispatch({type:GET_USER_FAILURE,payload:{message:err.message,status:500}});}return;};};export const signOutApp=()=>{return async dispatch=>{dispatch({type:SET_USER_REQUEST,payload:undefined});try{await signOut(auth);}catch(error){console.error(error);}};};export const sendPassResetEmail=email=>{};export const updateEmail=email=>{};export const updatePassword=password=>{};export const resetUserErrors=()=>{return dispatch=>{dispatch({type:CLEAR_USER_ERRORS});};};","map":{"version":3,"names":["updateProfile","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","auth","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILURE","SET_USER_REQUEST","SET_USER_SUCCESS","SET_USER_FAILURE","CLEAR_USER_ERRORS","authRequestWithDispatch","getCurrentUser","dispatch","endpoint","types","signUpApp","email","password","type","userPromise","user","displayName","err","payload","message","status","method","data","onboarded","signInApp","signOutApp","undefined","error","console","sendPassResetEmail","updateEmail","updatePassword","resetUserErrors"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/authentication/firebase.ts"],"sourcesContent":["import {\n    updateProfile,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    signOut,\n    sendPasswordResetEmail,\n} from 'firebase/auth'\nimport { auth } from '../config/firebase'\nimport { AppDispatch } from '../store'\nimport {\n    GET_USER_REQUEST,\n    GET_USER_SUCCESS,\n    GET_USER_FAILURE,\n\n    SET_USER_REQUEST,\n    SET_USER_SUCCESS,\n    SET_USER_FAILURE,\n    \n    CLEAR_USER_ERRORS,\n} from '../actions/user'\nimport { authRequestWithDispatch } from '../actions/api'\n\nexport const getCurrentUser = () => {\n    return (dispatch: AppDispatch) => {\n        return authRequestWithDispatch({\n            dispatch,\n            endpoint: 'get_current_user',\n            types: [GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_FAILURE],\n        })\n    }\n}\n\nexport const signUpApp = (\n    email: string,\n    password: string,\n) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({ \n            type: SET_USER_REQUEST \n        })\n        try {\n            const userPromise = await createUserWithEmailAndPassword(\n                auth,\n                email,\n                password,\n            )\n            await updateProfile(\n                userPromise.user, \n                { displayName: email }\n            )\n        } catch (err: any) {\n            dispatch({\n                type: SET_USER_FAILURE,\n                payload: {\n                    message: err.message,\n                    status: 500,\n                },\n            })\n            return\n        }\n\n        return authRequestWithDispatch({\n            dispatch,\n            endpoint: 'createUser',\n            method: 'POST',\n            types: [SET_USER_REQUEST, SET_USER_SUCCESS, SET_USER_FAILURE],\n            data: {\n                email,\n                onboarded: false,\n            },\n        })\n    }\n}\n\nexport const signInApp = (email: string, password: string) => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({ type: GET_USER_REQUEST })\n        try {\n            await signInWithEmailAndPassword(auth, email, password)\n        } catch (err: any) {\n            dispatch({\n                type: GET_USER_FAILURE,\n                payload: {\n                    message: err.message,\n                    status: 500,\n                },\n            })\n        }\n        return\n    }\n}\n\nexport const signOutApp = () => {\n    return async (dispatch: AppDispatch) => {\n        dispatch({\n            type: SET_USER_REQUEST,\n            payload: undefined,\n        })\n        try {\n            await signOut(auth)\n        } catch (error: any) {\n            console.error(error)\n        }\n    }\n}\n\nexport const sendPassResetEmail = (email: string) => {}\n\nexport const updateEmail = (email: string) => {}\n\nexport const updatePassword = (password: string) => {}\n\nexport const resetUserErrors = () => {\n    return (dispatch: AppDispatch) => {\n        dispatch({ type: CLEAR_USER_ERRORS })\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}