{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { auth } from '../config/firebase';\nimport { useAppDispatch } from '../store';\nimport { getCurrentUser } from '../authentication/firebase';\nconst useHandleAuthState = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const [loaded, setLoaded] = useState(false);\n  const [firstTimeUser, setFirstTimeUser] = useState(true);\n  useEffect(() => {\n    // get current user on initial load if user is logged in\n    auth.onAuthStateChanged(async user => {\n      // section to get data needed for initial boot\n      if (!loaded) {}\n      if (user && user.displayName) {\n        await dispatch(getCurrentUser());\n        setLoaded(true);\n      } else {\n        setLoaded(true);\n      }\n    });\n  }, []);\n  return {\n    loaded,\n    firstTimeUser\n  };\n};\n_s(useHandleAuthState, \"TlXzQOGb/7YfqKYNmu+ueZVzcoQ=\", false, function () {\n  return [useAppDispatch];\n});\nexport default useHandleAuthState;","map":{"version":3,"names":["useEffect","useState","auth","useAppDispatch","getCurrentUser","useHandleAuthState","_s","dispatch","loaded","setLoaded","firstTimeUser","setFirstTimeUser","onAuthStateChanged","user","displayName"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/hooks/index.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { auth } from '../config/firebase'\nimport { useAppDispatch } from '../store'\nimport { getCurrentUser } from '../authentication/firebase'\n\nconst useHandleAuthState = () => {\n    const dispatch = useAppDispatch()\n    const [loaded, setLoaded] = useState(false)\n    const [firstTimeUser, setFirstTimeUser] = useState(true)\n\n    useEffect(() => {\n        // get current user on initial load if user is logged in\n        auth.onAuthStateChanged(async (user) => {\n            // section to get data needed for initial boot\n            if (!loaded) {\n            }\n\n            if (user && user.displayName) {\n                await dispatch(getCurrentUser())\n                setLoaded(true)\n            } else {\n                setLoaded(true)\n            }\n        })\n    }, [])\n\n    return {\n        loaded,\n        firstTimeUser,\n    }\n}\n\nexport default useHandleAuthState\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,cAAc,QAAQ,4BAA4B;AAE3D,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGJ,cAAc,CAAC,CAAC;EACjC,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ;IACAE,IAAI,CAACU,kBAAkB,CAAC,MAAOC,IAAI,IAAK;MACpC;MACA,IAAI,CAACL,MAAM,EAAE,CACb;MAEA,IAAIK,IAAI,IAAIA,IAAI,CAACC,WAAW,EAAE;QAC1B,MAAMP,QAAQ,CAACH,cAAc,CAAC,CAAC,CAAC;QAChCK,SAAS,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACHA,SAAS,CAAC,IAAI,CAAC;MACnB;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHD,MAAM;IACNE;EACJ,CAAC;AACL,CAAC;AAAAJ,EAAA,CAzBKD,kBAAkB;EAAA,QACHF,cAAc;AAAA;AA0BnC,eAAeE,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}