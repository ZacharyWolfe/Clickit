{"ast":null,"code":"const initialState = {\n  items: new Map(),\n  tax: 0,\n  runningTotalWithoutTax: 0\n};\n\n/// eslint-disable-next-line\nexport default ((state = initialState, action) => {\n  // switch (action.type) {\n  //     case ADD_CART_ITEM:\n  //         return {\n  //             ...state,\n  //             items: new Map([\n  //                 ...Array.from(state.items),\n  //                 [\n  //                     action.payload as Sku,\n  //                     state.items.get(action.payload as Sku) ?? 0 + 1,\n  //                 ],\n  //             ]),\n  //             runningTotalWithoutTax:\n  //                 state.runningTotalWithoutTax +\n  //                 (action.payload as Sku).price,\n  //         }\n\n  //     case REMOVE_CART_ITEM:\n  //         return {\n  //             ...state,\n  //             items: new Map([\n  //                 ...Array.from(state.items),\n  //                 [\n  //                     action.payload as Sku,\n  //                     state.items.get(action.payload as Sku) ?? 0 - 1,\n  //                 ],\n  //             ]),\n  //             runningTotalWithoutTax:\n  //                 state.runningTotalWithoutTax === 0\n  //                     ? 0\n  //                     : state.runningTotalWithoutTax -\n  //                       (action.payload as Sku).price,\n  //         }\n  //     case CLEAR_CART:\n  //         return {\n  //             ...state,\n  //             items: new Map<Sku, number>(),\n  //             runningTotalWithoutTax: 0,\n  //         }\n  //     case PROMO_CODE_APPLIED:\n  //         return {\n  //             ...state,\n  //             runningTotalWithoutTax:\n  //                 state.runningTotalWithoutTax -\n  //                 fetchPromoCodeDiscount(action.payload as string),\n  //         }\n  //     default:\n  //         return state\n  // }\n  return initialState;\n});\nexport function fetchPromoCodeDiscount(arg) {\n  const promoCodes = new Map([['10OFF', 10], ['20OFF', 20], ['30OFF', 30], ['40OFF', 40], ['50OFF', 50], ['60OFF', 60], ['70OFF', 70], ['80OFF', 80], ['90OFF', 90], ['100OFF', 100], ['110OFF', 110]]);\n  if (arg in promoCodes) {\n    return promoCodes.get(arg);\n  }\n  return 0.0;\n}","map":{"version":3,"names":["initialState","items","Map","tax","runningTotalWithoutTax","state","action","fetchPromoCodeDiscount","arg","promoCodes","get"],"sources":["/Users/zacharywolfe/Desktop/Clickit/clickit/src/reducers/cart.ts"],"sourcesContent":["import { current, UnknownAction } from '@reduxjs/toolkit'\nimport {\n    ADD_CART_ITEM,\n    CLEAR_CART,\n    PROMO_CODE_APPLIED,\n    REMOVE_CART_ITEM,\n} from '../actions/cart'\n\nexport interface Sku {\n    id: string\n    name: string\n    image: string\n    size: number\n    price: number\n    colorway: string\n    skuStringID?: string\n    gender: string\n    brandName: string\n    laces: boolean\n    condition: boolean\n    bestSeller: boolean\n    manufacturer?: string\n}\n\ninterface shoppingCartState {\n    items: Map<Sku, number>\n    tax: number\n    runningTotalWithoutTax: number\n}\n\nconst initialState: shoppingCartState = {\n    items: new Map<Sku, number>(),\n    tax: 0,\n    runningTotalWithoutTax: 0,\n}\n\n/// eslint-disable-next-line\nexport default (\n    state = initialState,\n    action: UnknownAction,\n): shoppingCartState => {\n    // switch (action.type) {\n    //     case ADD_CART_ITEM:\n    //         return {\n    //             ...state,\n    //             items: new Map([\n    //                 ...Array.from(state.items),\n    //                 [\n    //                     action.payload as Sku,\n    //                     state.items.get(action.payload as Sku) ?? 0 + 1,\n    //                 ],\n    //             ]),\n    //             runningTotalWithoutTax:\n    //                 state.runningTotalWithoutTax +\n    //                 (action.payload as Sku).price,\n    //         }\n\n    //     case REMOVE_CART_ITEM:\n    //         return {\n    //             ...state,\n    //             items: new Map([\n    //                 ...Array.from(state.items),\n    //                 [\n    //                     action.payload as Sku,\n    //                     state.items.get(action.payload as Sku) ?? 0 - 1,\n    //                 ],\n    //             ]),\n    //             runningTotalWithoutTax:\n    //                 state.runningTotalWithoutTax === 0\n    //                     ? 0\n    //                     : state.runningTotalWithoutTax -\n    //                       (action.payload as Sku).price,\n    //         }\n    //     case CLEAR_CART:\n    //         return {\n    //             ...state,\n    //             items: new Map<Sku, number>(),\n    //             runningTotalWithoutTax: 0,\n    //         }\n    //     case PROMO_CODE_APPLIED:\n    //         return {\n    //             ...state,\n    //             runningTotalWithoutTax:\n    //                 state.runningTotalWithoutTax -\n    //                 fetchPromoCodeDiscount(action.payload as string),\n    //         }\n    //     default:\n    //         return state\n    // }\n    return initialState\n}\n\nexport function fetchPromoCodeDiscount(arg: string): number {\n    const promoCodes = new Map<string, number>([\n        ['10OFF', 10],\n        ['20OFF', 20],\n        ['30OFF', 30],\n        ['40OFF', 40],\n        ['50OFF', 50],\n        ['60OFF', 60],\n        ['70OFF', 70],\n        ['80OFF', 80],\n        ['90OFF', 90],\n        ['100OFF', 100],\n        ['110OFF', 110],\n    ])\n\n    if (arg in promoCodes) {\n        return promoCodes.get(arg) as number\n    }\n\n    return 0.0\n}\n"],"mappings":"AA8BA,MAAMA,YAA+B,GAAG;EACpCC,KAAK,EAAE,IAAIC,GAAG,CAAc,CAAC;EAC7BC,GAAG,EAAE,CAAC;EACNC,sBAAsB,EAAE;AAC5B,CAAC;;AAED;AACA,gBAAe,CACXC,KAAK,GAAGL,YAAY,EACpBM,MAAqB,KACD;EACpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,OAAON,YAAY;AACvB,CAAC;AAED,OAAO,SAASO,sBAAsBA,CAACC,GAAW,EAAU;EACxD,MAAMC,UAAU,GAAG,IAAIP,GAAG,CAAiB,CACvC,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,QAAQ,EAAE,GAAG,CAAC,EACf,CAAC,QAAQ,EAAE,GAAG,CAAC,CAClB,CAAC;EAEF,IAAIM,GAAG,IAAIC,UAAU,EAAE;IACnB,OAAOA,UAAU,CAACC,GAAG,CAACF,GAAG,CAAC;EAC9B;EAEA,OAAO,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}