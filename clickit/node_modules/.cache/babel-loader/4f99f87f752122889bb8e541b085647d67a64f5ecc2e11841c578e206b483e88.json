{"ast":null,"code":"import { ADD_CART_ITEM, CLEAR_CART, PROMO_CODE_APPLIED, REMOVE_CART_ITEM } from '../actions/cart';\nconst initialState = {\n  items: new Map(),\n  tax: 0,\n  runningTotalWithoutTax: 0\n};\n\n/// eslint-disable-next-line\nexport default ((state = initialState, action) => {\n  var _state$items$get;\n  switch (action.type) {\n    case ADD_CART_ITEM:\n      const newItem = action.payload;\n      const newItems = new Map(state.items);\n      newItems.set(newItem, 1);\n      const itemsObject = new Map();\n      newItems.forEach((value, key) => {\n        itemsObject[key.id] = value;\n      });\n      return {\n        ...state,\n        items: itemsObject,\n        runningTotalWithoutTax: state.runningTotalWithoutTax + newItem.price\n      };\n    case REMOVE_CART_ITEM:\n      return {\n        ...state,\n        items: new Map([...Array.from(state.items), [action.payload, (_state$items$get = state.items.get(action.payload)) !== null && _state$items$get !== void 0 ? _state$items$get : 0 - 1]]),\n        runningTotalWithoutTax: state.runningTotalWithoutTax === 0 ? 0 : state.runningTotalWithoutTax - action.payload.price\n      };\n    case CLEAR_CART:\n      return {\n        ...state,\n        items: new Map(),\n        runningTotalWithoutTax: 0\n      };\n    case PROMO_CODE_APPLIED:\n      return {\n        ...state,\n        runningTotalWithoutTax: state.runningTotalWithoutTax - fetchPromoCodeDiscount(action.payload)\n      };\n    default:\n      return state;\n  }\n});\nexport function fetchPromoCodeDiscount(arg) {\n  const promoCodes = new Map([['10OFF', 10], ['20OFF', 20], ['30OFF', 30], ['40OFF', 40], ['50OFF', 50], ['60OFF', 60], ['70OFF', 70], ['80OFF', 80], ['90OFF', 90], ['100OFF', 100], ['110OFF', 110]]);\n  if (arg in promoCodes) {\n    return promoCodes.get(arg);\n  }\n  return 0.0;\n}","map":{"version":3,"names":["ADD_CART_ITEM","CLEAR_CART","PROMO_CODE_APPLIED","REMOVE_CART_ITEM","initialState","items","Map","tax","runningTotalWithoutTax","state","action","_state$items$get","type","newItem","payload","newItems","set","itemsObject","forEach","value","key","id","price","Array","from","get","fetchPromoCodeDiscount","arg","promoCodes"],"sources":["/Users/zacharywolfe/Desktop/ClickitV2/clickitv2/src/reducers/cart.ts"],"sourcesContent":["import { current, UnknownAction } from '@reduxjs/toolkit'\nimport { ADD_CART_ITEM, CLEAR_CART, PROMO_CODE_APPLIED, REMOVE_CART_ITEM } from '../actions/cart'\n\nexport interface Sku {\n    id: string\n    name: string\n    image?: string\n    size: number\n    price: number\n    colorway: string\n    skuStringID?: string\n    gender: string\n    brandName: string\n    laces: boolean\n    condition: boolean\n    bestSeller: boolean\n    manufacturer?: string\n}\n\ninterface shoppingCartState {\n    items: Map<Sku, number>\n    tax: number\n    runningTotalWithoutTax: number\n}\n\nconst initialState: shoppingCartState = {\n    items: new Map<Sku, number>(),\n    tax: 0,\n    runningTotalWithoutTax: 0,\n}\n\n/// eslint-disable-next-line\nexport default (\n    state = initialState,\n    action: UnknownAction,\n): shoppingCartState => {\n    switch (action.type) {\n        case ADD_CART_ITEM:\n            const newItem = action.payload as Sku;\n        const newItems = new Map(state.items);\n        newItems.set(newItem, 1);\n        const itemsObject: Map<Sku, number> = new Map();\n        newItems.forEach((value, key) => {\n            itemsObject[key.id] = value;\n        });\n        return {\n            ...state,\n            items: itemsObject,\n            runningTotalWithoutTax: state.runningTotalWithoutTax + newItem.price,\n        }\n        case REMOVE_CART_ITEM:\n            return {\n                ...state,\n                items: new Map([\n                    ...Array.from(state.items),\n                    [\n                        action.payload as Sku,\n                        state.items.get(action.payload as Sku) ?? 0 - 1,\n                    ],\n                ]),\n                runningTotalWithoutTax:\n                    state.runningTotalWithoutTax === 0\n                        ? 0\n                        : state.runningTotalWithoutTax -\n                          (action.payload as Sku).price,\n            }\n        case CLEAR_CART:\n            return {\n                ...state,\n                items: new Map<Sku, number>(),\n                runningTotalWithoutTax: 0,\n            }\n        case PROMO_CODE_APPLIED:\n            return {\n                ...state,\n                runningTotalWithoutTax:\n                    state.runningTotalWithoutTax -\n                    fetchPromoCodeDiscount(action.payload as string),\n            }\n        default:\n            return state\n    }\n}\n\nexport function fetchPromoCodeDiscount(arg: string): number {\n    const promoCodes = new Map<string, number>([\n        ['10OFF', 10],\n        ['20OFF', 20],\n        ['30OFF', 30],\n        ['40OFF', 40],\n        ['50OFF', 50],\n        ['60OFF', 60],\n        ['70OFF', 70],\n        ['80OFF', 80],\n        ['90OFF', 90],\n        ['100OFF', 100],\n        ['110OFF', 110],\n    ])\n\n    if (arg in promoCodes) {\n        return promoCodes.get(arg) as number\n    }\n\n    return 0.0\n}"],"mappings":"AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,iBAAiB;AAwBjG,MAAMC,YAA+B,GAAG;EACpCC,KAAK,EAAE,IAAIC,GAAG,CAAc,CAAC;EAC7BC,GAAG,EAAE,CAAC;EACNC,sBAAsB,EAAE;AAC5B,CAAC;;AAED;AACA,gBAAe,CACXC,KAAK,GAAGL,YAAY,EACpBM,MAAqB,KACD;EAAA,IAAAC,gBAAA;EACpB,QAAQD,MAAM,CAACE,IAAI;IACf,KAAKZ,aAAa;MACd,MAAMa,OAAO,GAAGH,MAAM,CAACI,OAAc;MACzC,MAAMC,QAAQ,GAAG,IAAIT,GAAG,CAACG,KAAK,CAACJ,KAAK,CAAC;MACrCU,QAAQ,CAACC,GAAG,CAACH,OAAO,EAAE,CAAC,CAAC;MACxB,MAAMI,WAA6B,GAAG,IAAIX,GAAG,CAAC,CAAC;MAC/CS,QAAQ,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;QAC7BH,WAAW,CAACG,GAAG,CAACC,EAAE,CAAC,GAAGF,KAAK;MAC/B,CAAC,CAAC;MACF,OAAO;QACH,GAAGV,KAAK;QACRJ,KAAK,EAAEY,WAAW;QAClBT,sBAAsB,EAAEC,KAAK,CAACD,sBAAsB,GAAGK,OAAO,CAACS;MACnE,CAAC;IACD,KAAKnB,gBAAgB;MACjB,OAAO;QACH,GAAGM,KAAK;QACRJ,KAAK,EAAE,IAAIC,GAAG,CAAC,CACX,GAAGiB,KAAK,CAACC,IAAI,CAACf,KAAK,CAACJ,KAAK,CAAC,EAC1B,CACIK,MAAM,CAACI,OAAO,GAAAH,gBAAA,GACdF,KAAK,CAACJ,KAAK,CAACoB,GAAG,CAACf,MAAM,CAACI,OAAc,CAAC,cAAAH,gBAAA,cAAAA,gBAAA,GAAI,CAAC,GAAG,CAAC,CAClD,CACJ,CAAC;QACFH,sBAAsB,EAClBC,KAAK,CAACD,sBAAsB,KAAK,CAAC,GAC5B,CAAC,GACDC,KAAK,CAACD,sBAAsB,GAC3BE,MAAM,CAACI,OAAO,CAASQ;MACtC,CAAC;IACL,KAAKrB,UAAU;MACX,OAAO;QACH,GAAGQ,KAAK;QACRJ,KAAK,EAAE,IAAIC,GAAG,CAAc,CAAC;QAC7BE,sBAAsB,EAAE;MAC5B,CAAC;IACL,KAAKN,kBAAkB;MACnB,OAAO;QACH,GAAGO,KAAK;QACRD,sBAAsB,EAClBC,KAAK,CAACD,sBAAsB,GAC5BkB,sBAAsB,CAAChB,MAAM,CAACI,OAAiB;MACvD,CAAC;IACL;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,SAASiB,sBAAsBA,CAACC,GAAW,EAAU;EACxD,MAAMC,UAAU,GAAG,IAAItB,GAAG,CAAiB,CACvC,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,OAAO,EAAE,EAAE,CAAC,EACb,CAAC,QAAQ,EAAE,GAAG,CAAC,EACf,CAAC,QAAQ,EAAE,GAAG,CAAC,CAClB,CAAC;EAEF,IAAIqB,GAAG,IAAIC,UAAU,EAAE;IACnB,OAAOA,UAAU,CAACH,GAAG,CAACE,GAAG,CAAC;EAC9B;EAEA,OAAO,GAAG;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}